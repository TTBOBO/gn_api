<?phpdefined ( 'BASEPATH' ) or exit ( 'No direct script access allowed' );class Alipay_model extends MY_model {	public static $PARTNER = '2088121526428742'; // 必填，合作商户号、	public static $SELLER_ID = '1965083968@qq.com'; // 必填，卖家支付宝账号    public static $NOTIFY_URL = 'http://192.168.1.110:8082/';//服务器异步通知页面路径	//public static $NOTIFY_URL = 'http://localhost:8088/';//服务器异步通知页面路径	public static $PRIVATE_KEY = "-----BEGIN RSA PRIVATE KEY-----MIICXgIBAAKBgQCx+oMcRtUgYNcl1HzX0dnZyt7wt10z/cK1W02U0nSp/FB9knyMGbZXZsTFsvhkbnv6OyEhYB1nk+z79M45/DQmf7Zd3jI2cKEYiLoPJi5gJ9dK4uUSPT2OjV6g7OvE8jmQ8lNc1I12R8umrMkj3JsCek6zt0a7nPAeJQ1txzJNsQIDAQABAoGBAJIAUYHm0XtoNdaAw5FAQxgZBl4t7bVy3EFuDuyg4Ld5loYMn0NG7IAyfAU6Ve39fJK/4uPANx77CJOANZT3wcbcsaU0BkWvyqyWPcBPIIXEkm/MnF78a5/GXyrENIfmoKL+3+vMTxDZcxkRcgmcW0K+yv6PTuPbcG9XnOiTVzZJAkEA363hvnuAs9x/DkRlG9zOktQGpWi18knLW1wEb26Wp9YEMikgaiNv3L2L5X2J06m7+SJlCN06YvjlKx/MVwwtRwJBAMuyHfxw+wUsTuLkaOycazT1TaxFdbAlQURRvuuj/3e/HC+MBQazEIBGCvxr4ZUwtLWyOECK6sOH14+FgBETyUcCQF6fZDv8avmrcWRLsqoSwqCCaT1YCoAwj4JabtXk5n6hnqzJkRjVXOD4nlG6xa9wwkAmOK+DRsvPlsKjdQHt+MkCQQCRmipxDlmAYyGocdjGeTDw0//HiocLeDXlHgG48qtj70m4ewAEv+6lomur73l6aSxjTJeFG0egqPNe9fCLRHd1AkEAgvOJIetPKQvNsv2xvpqY7E5INIBTxDrJK0IonvuqGe2O/AeCRjiPJJNNZzVm/BtbglL7Myy1uxHS+VT7qdhzaw==-----END RSA PRIVATE KEY-----";		public function __construct() {		parent::__construct ( "dede_shops_orders" );	}		// 签名生成订单信息	private function __rsaSign($data) {		$priKey = self::$PRIVATE_KEY;		$res = openssl_pkey_get_private($priKey);		openssl_sign($data, $sign, $res);		openssl_free_key($res);		$sign = base64_encode($sign);		$sign = urlencode($sign);		return $sign;	}		// 对签名字符串转义	private function __createLinkstring($para) {		$arg = "";		while (list($key, $val) = each($para)) {			$arg .= $key . '="' . $val . '"&';		}		//去掉最后一个&字符		$arg = substr($arg, 0, count($arg) - 2);		//如果存在转义字符，那么去掉转义		if (get_magic_quotes_gpc()) {$arg = stripslashes($arg);		}		return $arg;	}		private function __createParamter($r){		return array(				'notify_url'     =>urlencode( self::$NOTIFY_URL),				'service'        => 'mobile.securitypay.pay',   // 必填，接口名称，固定值				'partner'        => self::$PARTNER,                   // 必填，合作商户号				'_input_charset' => 'UTF-8',                    // 必填，参数编码字符集				'out_trade_no'   => $r['oid'],              // 必填，商户网站唯一订单号				'subject'        => $r['title'],                   // 必填，商品名称				'payment_type'   => '1',                        // 必填，支付类型				'seller_id'      => self::$SELLER_ID,                 // 必填，卖家支付宝账号				'total_fee'      => $r['price'],                     // 必填，总金额，取值范围为[0.01,100000000.00]				'body'           => '购买【'.$r['title'].'】商品，消费【'.$r['price'].'】元购买',                      // 必填，商品详情				'it_b_pay'       => '1d',                       // 可选，未付款交易的超时时间				// 可选，服务器异步通知页面路径				//'show_url'       => $base_path                  // 可选，商品展示网站		);	}		private function __getURL($r) {		$parameter = $this->__createParamter($r);		//生成需要签名的订单		$orderInfo = $this->__createLinkstring($parameter);		//签名		$sign = $this->__rsaSign($orderInfo);		//生成订单		return $orderInfo . '&sign="' . $sign . '"&sign_type="RSA"';//        return $orderInfo;        /*$pay_para=array(            "oid"=>$oid,            "title"=>$para["title"],            "price"=>$para["price"]        );*/    }	public  function Pay1($para){	    $oid = date("YmdHis").mt_rand(100000,999999);        $pay_para = array(            "oid" => $oid,            "title" => $para["title"],            "price" => $para["price"]        );        $addOrderArr = array(            "oid" => $oid,            "userid" =>$para["userid"],            "pid" => 0,            "paytype" => 3,            "cartcount" =>$para["carcount"],            "dprice" => 0,            "price" =>$para["price"],            "priceCount" => $para["price"],            "state" => 0,            "ip" =>$para["ip"],            "stime" => time()        );        $add_shop_products = array(            "aid" => $para["aid"],            "oid" => $oid,            "userid" => $para["userid"],            "title" => $para["title"],            "price" => $para["price"],            "buynum" => $para["carcount"]        );        $flagOrder = $this->__isHadOrder("dede_shops_orders",$oid);        $flagProducts = $this->__isHadOrder("dede_shops_products",$oid);        if(!$flagOrder){            $this->__addOrder("dede_shops_orders",$addOrderArr);        }        if(!$flagProducts){            $this->__addOrder("dede_shops_products",$add_shop_products);        }        $returnData["oid"] = $oid;        $returnData["url"] = $this->__getURL($pay_para);        return $returnData;    }		public function pay($para){        // 例如：20170110173853  mt_rand(100000,999999) 例如: 2146059;		$oid=date("YmdHis").mt_rand(100000,999999);		$pay_para=array(				"oid"=>$oid,				"title"=>$para["title"],				"price"=>$para["price"]		);				$addOrderArr=array(				"oid"=>$oid,				"userid"=>$para["userid"],				"pid"=>0,				"paytype"=>3,				"cartcount"=>$para["carcount"],				"dprice"=>0,				"price"=>$para["price"],				"priceCount"=>$para["price"],				"state"=>0,				"ip"=>$para["ip"],				"stime"=>time()		);		$addOrderProductArr=array(				"aid"=>$para["aid"],				"oid"=>$oid,				"userid"=>$para["userid"],				"title"=>$para["title"],				"price"=>$para["price"],				"buynum"=>$para["carcount"]		);		$flagOrder=$this->__isHadOrder("dede_shops_orders",$oid);		$flagProduct=$this->__isHadOrder("dede_shops_products",$oid);		if(!$flagOrder){            $this->db->insert("dede_shops_orders",$addOrderArr);		}		if(!$flagProduct){            $this->db->insert("dede_shops_products",$addOrderProductArr);		}		$returnData["oid"]=$oid;		$returnData["url"]=$this->__getURL($pay_para);//        $returnData["url"] = "1";		return $returnData;	}	//插入数据到商品信息表里面 $table 代表 数据表   $para 代表 插入信息	private function __addOrder($table,$para){		$this->db->insert($table,$para);        return $this->db->insert_id ();	}	    //查询订单号是否存在	private function __isHadOrder($table,$oid){		$flag=false;		$fields='oid';		$this->db->select($fields);		$this->db->from( $table );		$this->db->where ( array("oid"=>$oid) );		$data = $this->db->get()->row_array();		$flag=(sizeof($data)!=0);		return $flag;	}}